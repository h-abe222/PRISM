version: '3.9'

services:
  # ===========================================
  # Next.js アプリケーション
  # ===========================================
  app:
    container_name: prism-app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=postgresql://prism:prism_password@postgres:5432/prism_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    networks:
      - prism-network
    restart: unless-stopped

  # ===========================================
  # PostgreSQL データベース
  # ===========================================
  postgres:
    container_name: prism-postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=prism
      - POSTGRES_PASSWORD=prism_password
      - POSTGRES_DB=prism_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - prism-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prism"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # Redis キャッシュサーバー
  # ===========================================
  redis:
    container_name: prism-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - prism-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # Nginx リバースプロキシ
  # ===========================================
  nginx:
    container_name: prism-nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./public:/usr/share/nginx/html/public
    depends_on:
      - app
    networks:
      - prism-network
    restart: unless-stopped

  # ===========================================
  # pgAdmin (開発環境用)
  # ===========================================
  pgadmin:
    container_name: prism-pgadmin
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@prism.local
      - PGADMIN_DEFAULT_PASSWORD=admin_password
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - prism-network
    restart: unless-stopped
    profiles:
      - dev

  # ===========================================
  # Mailhog (開発環境用メールサーバー)
  # ===========================================
  mailhog:
    container_name: prism-mailhog
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - prism-network
    restart: unless-stopped
    profiles:
      - dev

# ===========================================
# ネットワーク設定
# ===========================================
networks:
  prism-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ===========================================
# ボリューム設定
# ===========================================
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  pgadmin-data:
    driver: local